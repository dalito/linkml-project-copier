# === Include other yaml files (optional) ===
# see https://copier.readthedocs.io/en/stable/configuring/#include-other-yaml-files


# === Questions to ask the user when generating a project from this template. ===
# see https://copier.readthedocs.io/en/stable/configuring/#advanced-prompt-formatting
project_name:
    type: str
    help: What is your project name?
    default: my-awesome-schema
project_slug:
    type: str
    help: A slug of the name
    default: "{% from pathjoin('includes', 'slugify.jinja') import slugify %}{{ slugify(project_name) }}"
email:
    help: Email address
    type: str
    default: my-name@my-org.org
full_name:
    help: Developer name
    type: str
    default: My Name
github_org:
    help: Github user or organisation name
    type: str
    default: my-org
project_description:
    help: A short description of the project
    type: str
    default: This is the project description.
license:
    help: Which license do you want for your project?
    type: str
    choices:
        - BSD-3
        - MIT
        - Mozilla Public License 2.0
        - Apache Software License 2.0
        - GNU LGPL v3.0
        - GNU GPL v3.0
    default: MIT

author:
    help: The author of the schema
    type: str
    default: "{{ full_name }} <{{ email }}>"

main_schema_class:
    type: str
    default: "Person"

create_python_classes:
    help: Create Python classes for the schema?
    type: str
    choices:
      - "Yes"
      - "No"
    default: "Yes"

github_token_for_pypi_deployment:
    help: Github token for PyPI deployment
    type: str
    default: "PYPI_PASSWORD"

use_schemasheets:
    help: Use Google Sheets for schema definitions?
    type: str
    choices:
      - "Yes"
      - "No"
    default: "No"

google_sheet_id:
    help: Google Sheet ID
    type: str
    default: 1wVoaiFg47aT9YWNeRfTZ8tYHN8s8PAuDx5i2HUcDpvQ

google_sheet_tabs:
    help: Google Sheet tabs
    type: str
    default: "personinfo enums"

google_sheet_module:
    help: Google Sheet module
    type: str
    default: "{% from pathjoin('includes', 'slugify.jinja') import slugify %}{{ slugify(google_sheet_tabs) }}"

source_path:
    help: Path to the source code
    type: str
    default: src/{{project_slug}}/schema/{{project_slug}}.yaml

# === copier configuration options ===
# see https://copier.readthedocs.io/en/stable/configuring/#available-settings

_subdirectory: template
_min_copier_version: "9.4.0"
_jinja_extensions:
    - jinja2_time.TimeExtension
_exclude:
    # files or dirs in template/ that should not be copied to the project
    - "copier.yaml"
    - "copier.yml"
    - "~*"
    - "*.py[co]"
    - "__pycache__"
    - ".git"
_tasks:
    # Commands to execute after generating or updating a project from the template.
    - "git init"
    # - "rm {{ name_of_the_project }}/README.md"

    # Arrays are executed without shell, saving you the work of escaping arguments
    # - [invoke, "--search-root={{ _copier_conf.src_path }}", after-copy]
    # Your script can be run by the same Python environment used to run Copier
    # - ["{{ _copier_python }}", task.py]

    # OS-specific task (supported values are "linux", "macos", "windows" and `None`)
    # - command: rm {{ name_of_the_project }}/README.md
    #   when: "{{ _copier_conf.os in  ['linux', 'macos'] }}"
    # - command: Remove-Item {{ name_of_the_project }}\\README.md
    #   when: "{{ _copier_conf.os == 'windows' }}"
